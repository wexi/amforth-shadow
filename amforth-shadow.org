#+TITLE: Soft Interrupt Service
#+AUTHOR: Enoch
#+EMAIL: ixew@hotmail.com
#+OPTIONS: email:t

* Objective

One of AmForth features is the ability to write interrupt handlers in Forth. However, in the current development trunk (SVN r1423 at the time of this writing) those handlers should run with the
hardware interrupt system (SREG I-bit) disabled. This means that one has to keep those interrupt handlers short and defer long processing to the "main". The following changes to the kernel introduce
an eight level interrupt queue, allowing the Forth code second level interrupt handlers (SLIH) to be interruptible and thus be as slow to execute as necessary. The new first level interrupt handling
(FLIH) is suitable for type I interrupt sources, those acknowledged by execution of their interrupt vectors.

* Implementation

To the existing +int and -int ("hard front-end") words that control the SREG I-bit the following ("soft rear-end") words were added:

** int+  ( -- )  "soft interrupts on"
Enables the soft interrupts. By default soft interrupts are enabled.

** int-  ( -- )  "soft interrupts off"
Disables the soft interrupts.

** int'  ( -- addr )  "soft interrupts apostrophe" 

Returns the address of a system variable where the lower byte, if non zero, indicates the occurance of a hard interrupt overflow. The overflow mark is the interrupting-device program address. Clear
this mark by: 0 int' c!

The higher byte, if non-zero, indicates having the soft interrupts inhibited.

* Compatibility

Existing code should not be affected.

  
    

   

  

